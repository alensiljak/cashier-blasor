@inherits LayoutComponentBase
@implements IDisposable
@inject AppState appState

<GestureContainer OnSwipeAsync="OnSwipe">
    <div style="display:flex; flex-direction: row;">
        <nav class="sidenav" style="width: @appState.SidebarWidth;">
            NavMenu
        </nav>
        <main style="margin-left: @appState.SidebarWidth;">
            @Body
        </main>
    </div>
</GestureContainer>

@code {

    protected override void OnInitialized()
    {
        appState.OnSidebarToggled += StateHasChanged;
    }

    private Task OnSwipe(GestureContainer.SwipeDirection swipeDirection)
    {
        // if open, allow swiping left to close.
        if (appState.SidebarVisible && swipeDirection == GestureContainer.SwipeDirection.Left)
        {
            appState.ToggleSidebar();
        }
        // if closed, allow swiping right to open.
        if (!appState.SidebarVisible && swipeDirection == GestureContainer.SwipeDirection.Right)
        {
            appState.ToggleSidebar();
        }
        StateHasChanged();

        return Task.CompletedTask;
    }

    public void Dispose()
    {
        // unsubscribe
        appState.OnSidebarToggled -= StateHasChanged;
    }
}
