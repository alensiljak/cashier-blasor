@inherits LayoutComponentBase

<GestureContainer OnSwipeAsync="OnSwipe">
    <div style="display:flex; flex-direction: row;">
        <nav class="sidenav" style="width: @sidebarSize;">
            <NavMenuFluent />
        </nav>
        <main style="margin-left: @sidebarSize;">
            <FluentButton @onclick="ToggleSidebar">Toggle</FluentButton>

            @Body

        </main>
    </div>
</GestureContainer>

@code {
    private const string VISIBLE = "250px";
    private const string INVISIBLE = "0";

    private string sidebarSize = VISIBLE;

    private Task OnSwipe(GestureContainer.SwipeDirection swipeDirection)
    {
        // if open, allow swiping left to close.
        if (SidebarVisible && swipeDirection == GestureContainer.SwipeDirection.Left)
        {
            ToggleSidebar();
        }
        // if closed, allow swiping right to open.
        if (!SidebarVisible && swipeDirection == GestureContainer.SwipeDirection.Right)
        {
            ToggleSidebar();
        }
        StateHasChanged();

        return Task.CompletedTask;
    }

    private bool SidebarVisible
    {
        get
        {
            return sidebarSize == VISIBLE;
        }
    }

    private void ToggleSidebar()
    {
        if (sidebarSize != VISIBLE)
        {
            sidebarSize = VISIBLE;
        }
        else
        {
            sidebarSize = INVISIBLE;
        }
    }
}
