@*
    Toolbar implemented with MudBlazor components.
*@
@inject AppState appState
@using MudBlazor

<MudAppBar Color="Color.Primary" Dense="true" Class="glossy">
    <MudIconButton Icon="@IconsMud.Menu" Color="Color.Inherit" Edge="Edge.Start"
                   OnClick="@((e) => OnMenuClick())" />

    <MudText Typo="Typo.h6">
        @ChildContent
        @Title
    </MudText>

    <MudSpacer />
    @if (ContextMenuItems != null)
    {
        <MudMenu T="string" Icon="@IconsMud.MoreVertical" @ref="mudMenu"
                 AnchorOrigin="Origin.CenterCenter" TransformOrigin="Origin.TopRight" Color="Color.Inherit">
            @ContextMenuItems
        </MudMenu>
    }
</MudAppBar>

@code {
    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    [Parameter]
    public RenderFragment? Title { get; set; }

    [Parameter]
    public RenderFragment? ContextMenuItems { get; set; }

    private MudMenu? mudMenu;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        appState.OnCloseMenu += CloseMenu;
    }

    private void CloseMenu()
    {
        mudMenu?.CloseMenuAsync();
    }

    private void OnMenuClick()
    {
        appState.ToggleSidebar();
    }

}
