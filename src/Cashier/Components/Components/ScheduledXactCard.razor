@*
    Scheduled Transactions Card
*@
@using MudBlazor

@inject NotificationService Notification
@inject IDexieDAL _db
@inject NavigationManager NavMan

<MudCard Class="@Class" Outlined="true" @onclick="OnCardClick" Style="background-color: transparent;">
    <MudCardHeader Style="@($"background: {Cashier.Lib.Palette.Primary};")" Class="px-2 pt-2 pb-1">
        <CardHeaderAvatar>
            <MudIcon Icon="@IconsMud.CalendarClock" Size="Size.Medium" />
        </CardHeaderAvatar>
        <CardHeaderContent>
            <MudText>Upcoming Transactions</MudText>
        </CardHeaderContent>
        <CardHeaderActions>
            @* <MudIconButton Icon="@Icons.Material.Filled.Settings" Color="Color.Default" /> *@
            @* <MudIcon Icon="@IconsMud.Settings" /> *@
        </CardHeaderActions>
    </MudCardHeader>
    <MudCardContent Class="pa-0">
        @if (_scheduledXacts == null || _scheduledXacts.Count == 0)
        {
            <MudText>There are no scheduled transactions</MudText>
        }
        else
        {
            <MudSimpleTable Dense Style="background-color: transparent;">
                <colgroup>
                    <col style="width: 90px;" />
                    <col style="flex-grow: 1;" />
                </colgroup>
                <tbody>
                    @foreach(var schXact in _scheduledXacts)
                    {
                        <tr>
                            <td class="pl-2 pr-1" style="color: @GetDateColour(schXact.NextDate)">
                                @schXact.NextDate.ToString(Constants.ISODateFormat)
                            </td>
                            <td class="pl-2">
                                @schXact.Transaction?.Payee
                            </td>
                        </tr>
                    }
                </tbody>
            </MudSimpleTable>
        }
    </MudCardContent>
    <MudCardActions Class="justify-center">
        <MudButton StartIcon="@IconsMud.CalendarDays" Variant="Variant.Outlined" Color="Color.Tertiary"
                   @onclick="OnCalendarClick">Calendar</MudButton>
    </MudCardActions>

</MudCard>

@code {
    [Parameter]
    public string? Class { get; set; }

    List<ScheduledXact> _scheduledXacts { get; set; } = [];
    AppService _appService = default!;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        _appService = new AppService();

        await loadData();
    }

    string GetDateColour(DateOnly date)
    {
        return _appService.GetDateColour(date);
    }

    async Task loadData()
    {
        _scheduledXacts = await _db.ScheduledXacts
            .OrderBy(nameof(ScheduledXact.NextDate))
            //.SortBy("transaction.payee")
            .Limit(5)
            .ToList();
    }

    void OnCalendarClick()
    {
        Notification.Info("Not Implemented");
    }

    void OnCardClick()
    {
        NavMan.NavigateTo("/scheduled-xacts");
    }
}
