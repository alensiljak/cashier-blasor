@*
    Sync Card
*@
@inject ISnackbar Snackbar
@inject NavigationManager NavMan
@inject NotificationService Notification

@using MudBlazor

<MudCard Class="@Class" Outlined="true" Style="background-color: transparent;">
    <MudCardHeader Style="@($"background: {Cashier.Lib.Palette.Primary};")" Class="px-2 pt-1 pb-0">
        <CardHeaderAvatar>
            <MudIcon Icon="@IconsMud.RefreshCW" Size="Size.Medium" />
        </CardHeaderAvatar>
        <CardHeaderContent>
            <MudText>CashierSync</MudText>
        </CardHeaderContent>
        <CardHeaderActions>
            <MudIconButton Icon="@IconsMud.Settings" @onclick="OnSettingsClick" />
            <MudIconButton Icon="@IconsMud.HelpCircle" @onclick="OnHelpClick" />
        </CardHeaderActions>
    </MudCardHeader>
    <MudCardContent>
        Status:
    </MudCardContent>
    <MudCardActions Class="justify-center">
        <MudButton StartIcon="@IconsMud.Settings" Variant="Variant.Outlined" Color="Color.Tertiary"
                   @onclick="OnSettingsClick" Class="mr-3">
                   Sync Settings</MudButton>
@*         <MudButton StartIcon="@IconsMud.RefreshCW" Variant="Variant.Outlined" Color="Color.Tertiary"
                   @onclick="OnSyncClick">Sync</MudButton>
 *@    </MudCardActions>

</MudCard>

@code {
    [Parameter]
    public string? Class { get; set; }

    void OnHelpClick()
    {
        Snackbar.Add("Not Implemented");
    }

    void OnSettingsClick()
    {
        NavMan.NavigateTo("/sync");
    }

    void OnSyncClick() {
        // todo: implement synchronization
        Notification.Info("Not implemented");
    }
}
