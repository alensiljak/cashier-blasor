@page "/sync"

@inject IJSRuntime JSRuntime
@inject ISnackbar Snackbar

@using Cashier.Services
@using MudBlazor

<ToolbarMud>
    <Title>Cashier Sync</Title>
    <ContextMenuItems>

    </ContextMenuItems>
</ToolbarMud>

<MudText>To update data from Ledger, the Cashier Server must be running and accessible.</MudText>
<MudText>You can run Cashier Server locally.</MudText>

<MudText Typo="Typo.h4" Align="Align.Center">Settings</MudText>

<MudTextField T="string" Placeholder="http://localhost:3000" Label="Server URL" Value="@ServerUrl" ValueChanged="saveSyncServerUrl" />

<MudDivider DividerType="DividerType.Middle" />

<MudText Typo="Typo.h4" Align="Align.Center" Class="mt-3">Synchronization</MudText>

<MudCheckBox T="bool">Sync accounts list with balances</MudCheckBox>

<MudCheckBox T="bool">yo</MudCheckBox>

<MudCheckBox T="bool">yo</MudCheckBox>

<MudContainer Class="d-flex justify-center">
    <MudButton Variant="Variant.Filled" Color="Color.Tertiary" Size="Size.Large"
               StartIcon="@IconsMud.RefreshCW" Style="color: var(--mud-palette-secondary);" Class="">Sync</MudButton>
</MudContainer>

@code {
    private string _serverUrl = default!;
    string ServerUrl
    {
        get
        {
            return _serverUrl ?? "http://localhost:3000";
        }
        set
        {
            _serverUrl = value;
        }
    }
    string? rootInvestmentAccount = null;
    string? currency = null;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        await loadSettings();
    }

    async Task loadSettings()
    {
        var settings = new SettingsService(JSRuntime);

        _serverUrl = await settings.GetSyncServerUrl();
        rootInvestmentAccount = await settings.GetRootInvestmentAccount();
        currency = await settings.GetDefaultCurrency();

        StateHasChanged();
    }

    async Task saveSyncServerUrl(string value)
    {
        // Console.WriteLine("sync server changed: {0}", value);
        ServerUrl = value;

        var settings = new SettingsService(JSRuntime);
        await settings.SetSyncServerUrl(value);

        Snackbar.Add("Sync URL saved");
    }
}
