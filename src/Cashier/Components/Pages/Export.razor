@page "/export"
@page "/export/{dataType?}"

@using MudBlazor
@inject IDexieDAL _db
@inject IJSRuntime _jsRuntime
@inject NotificationService Notification

<ToolbarMud>
    Export @dataType
</ToolbarMud>

<div>
    <p>Export your data - @dataType:</p>
    <p>
        Note: Journal is exported in ledger format, Scheduled Transactions in
        JSON.
    </p>
</div>

<MudTextField T="string" Value="@output" Lines="10" AutoGrow="true"></MudTextField>

<MudContainer Class="pt-4 d-flex justify-center">
    <MudIconButton Icon="@IconsMud.Copy" Color="Color.Primary" Variant="Variant.Filled" Class="rounded-xl"
                   OnClick="OnClipboardClick" Size="Size.Large" />
    @* pCloud Save *@
    @* WebShare *@
    @* Download *@
</MudContainer>

@code {
    [Parameter]
    public string dataType { get; set; } = "journal";

    string? output;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        await LoadData();
    }

    async Task LoadData()
    {
        switch(dataType)
        {
            case "journal":
                output = await new AppService().GetExportTransactions(_db);
                break;
            case "scheduled":
                // loadScheduledTransactions
                break;
        }
    }

    async Task OnClipboardClick()
    {
        if (output is null)
        {
            Notification.Warning("The content is empty.");
            return;
        }

        await new AppService().CopyToClipboard(_jsRuntime, output);

        Notification.Success(dataType + " copied to clipboard");
    }
}
