@page "/scheduled-xacts"
@using MudBlazor

@inject NavigationManager NavMan
@inject IDexieDAL _db

<ToolbarMud>
    <Title>Scheduled</Title>
    <ContextMenuItems>
        <MudListItem Icon="@IconsMud.PackageOpen" @onclick="OnRestoreClick">Restore</MudListItem>

    </ContextMenuItems>
</ToolbarMud>

@if (_list.Count == 0)
{
    <MudText>Loading...</MudText>
}
else
{
    <MudList>
        @foreach (var stx in _list)
        {
            <MudListItem>
                <MudStack Row>
                    <span class="mr-1" style="color: @GetDateColour(stx.NextDate);">
                        @stx.NextDate.ToString(Constants.ISODateFormat)
                    </span>
                    @stx.Transaction?.Payee
                </MudStack>
            </MudListItem>
        }
    </MudList>
}

@code {
    List<ScheduledXact> _list = [];
    AppService _appService = new AppService();

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        await loadData();
    }

    async Task loadData()
    {
        _list = await _db.ScheduledXacts
            .OrderBy(nameof(ScheduledXact.NextDate))
            .ToList();

        // sort also by payee, case insensitive

    }

    string GetDateColour(DateOnly date)
    {
        return _appService.GetDateColour(date);
    }

    void OnRestoreClick()
    {
        NavMan.NavigateTo("/restore/scheduled");
    }
}
