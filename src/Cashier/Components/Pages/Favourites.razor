@page "/favourites"

@using MudBlazor

@inject IDexieDAL _db

<ToolbarMud>
    <Title>Favourites</Title>
    <ContextMenuItems>
        <MudListItem Icon="@IconsMud.PlusCircle">Add</MudListItem>
        <MudListItem Icon="@IconsMud.Trash">Delete All</MudListItem>
        <MudListItem Icon="@IconsMud.ArrowUpDown">Reorder</MudListItem>
    </ContextMenuItems>
</ToolbarMud>

@* Accounts List *@
@if (accounts.Count == 0)
{
    <MudText>No favourite accounts set</MudText>
}
else
{
    @*
    <MudSimpleTable Dense>
        <tbody>
            @foreach (var account in accounts)
            {
                <tr>
                    <td class="pl-2 pr-1">
                        @account.Name
                    </td>
                </tr>
                <tr>
                    <td class="pl-0 pr-2" style="text-align: end;">
                        @account.AccountBalance
                    </td>

                </tr>
            }
        </tbody>
    </MudSimpleTable>
    *@
    
    <MudList>
        @foreach (var account in accounts)
        {
            <MudListItem Class="px-2 py-1">
                <MudText>
                    @account.Name
                </MudText>
                <MudText Align="Align.End" Typo="Typo.body2">
                    @account.AccountBalance
                </MudText>
            </MudListItem>
        }
    </MudList>
    
    @*
    <MudTreeView T="Account" Items="@_accountsHashSet">

    </MudTreeView>
    *@
}

@code {
    List<AccountViewModel> accounts = [];
    // HashSet<AccountViewModel> _accountsHashSet = [];

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        // todo: handle selection

        await loadData();

        // create a tree view
        // CreateTreeView();
    }

    async Task loadData()
    {
        var app = new AppService();
        var data = await app.LoadFavouriteAccounts(_db);
        accounts = accounts.ConvertAll(acc => new AccountViewModel(acc));

        var aug = new TransactionAugmenter();
        await aug.AdjustAccountBalances(_db, accounts);
    }

    // void CreateTreeView()
    // {
    //     _accountsHashSet = accounts.ToHashSet();
    // }
}
